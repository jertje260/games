@using Games.Core;
@if(_game is not null && !_game.Finished){
    <div>Current player is: @_game.CurrentPlayer.Color</div>
}
@if(_game is not null && _game.Finished){
    <button class="btn btn-primary" @onclick="NewGame">New Game</button>
    <div>
        Game has finished, the winner was @_game.Winner.Color
    </div>
}
<div class="connectfour-border">
    <div class="connectfour-game">
        @if (_game != null)
        {
            @for (int j = 0; j < _game.PlayedStones.GetLength(0); j++)
            {
                var x = j;
                <div class="column column@(j+1) @FullColumnClass(j)">
                @for (int i = _game.PlayedStones.GetLength(1) - 1; i >= 0; i--)
                {
                    var y = i;
                    <ConnectFourTile Model="@_game.PlayedStones[j,i]" OnClick="() => Click(x)"></ConnectFourTile>
                }
                </div>
            }
        }
    </div>
</div>

@code {
    private static readonly ConnectFourPlayer P1 = new ConnectFourPlayer("a", TileColor.Yellow);
    private static readonly ConnectFourPlayer P2 = new ConnectFourPlayer("b", TileColor.Red);
    private List<string> _errors = new List<string>();

    private Game? _game;

    protected override void OnInitialized()
    {
        NewGame();
    }

    private string FullColumnClass(int j){
        for(int i = _game.PlayedStones.GetLength(1) - 1; i >= 0; i--){
            if(_game.PlayedStones[j,i] is null){
                return "";
            }
        }
        return "column-full";
    }

    private void Click(int j)
    {
        try
        {
            try
            {
                _game?.PlayStone(P1, j);
            }
            catch (NotPlayersTurnException)
            {
                _game?.PlayStone(P2, j);
            }
        }
        catch (PlayNotAllowedException)
        {
        }
        catch (GameAlreadyFinishedException)
        {
        }
        StateHasChanged();
    }

    private void NewGame(){
        _game = new Game(P1, P2);
        _game.Start();
        _errors = new List<string>();
    }

}
